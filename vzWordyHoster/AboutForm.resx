<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>